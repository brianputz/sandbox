<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>MIT OpenCourseWare | Electrical Engineering and Computer Science | 6.830 Database Systems, Fall 2005 | Projects</title>
<!-- Begin Automatic Metadata Insertion --><meta content="6-830-database-systems-fall-2005" name="WT.cg_n">
<meta content="Projects" name="WT.cg_s">
<meta content="Projects" name="Title">
<meta content="This section provides information about important dates, what is expected, what to hand in, and project ideas." name="Description">
<meta content="Samuel Madden" name="Author">
<meta content="engineering and design of database systems, data models,database and schema design,schema normalization and integrity constraints,query processing,query optimization and cost estimation,transactions,recovery,concurrency control,isolation and consistency,distributed,parallel,heterogeneous databases,adaptive databases,trigger systems,pub-sub systems,semi structured data and XML querying" name="Keyword">
<meta content="" name="Version">
<meta content="6.830 Database Systems | Projects" name="Search_Display">
<!-- End Automatic Metadata Insertion --><link title="default" rel="stylesheet" type="text/css" href="../../common/styles/common.css">
<link title="default" rel="stylesheet" type="text/css" href="http://ocw.mit.edu/styles/cmsfixes.css">
<link title="default" rel="stylesheet" type="text/css" href="../../common/styles/courses.css">
<link href="http://ocw.mit.edu/xml/ocwcc.rdf" type="application/rdf+xml" rel="metadata">
<script type="text/javascript" src="../../common/scripts/common-utils-offline.js"></script>
</head>
<body id="home">
        <a href="#main" class="skip" tabindex="-1">skip to content</a> <a id="top"></a>
        <div id="container">
            
            
                
	


<div id="portletwrapper-6f63772e746f70706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d686561646572" class="portletWrapper kssattr-portlethash-6f63772e746f70706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d686561646572">
<div class="portletStaticText portlet-static-site-header"><div id="page_header">
<div class="logo">
<h1>
<a href="http://ocw.mit.edu/"><img height="36" width="289" alt="MIT OpenCourseWare" src="../../common/images/logo-ocw-home_new.gif" class="normalView"></a> <img class="printView" alt="MIT OpenCourseWare" src="http://ocw.mit.edu/images/logo-print.gif">
</h1>
</div>
<!-- end header -->
<div class="newletter"><a href="http://ocw.mit.edu/jsp/subscribe.jsp"> <img width="128" src="../../common/images/newsletter_signup_trans.gif" alt="OCW Newsletter Signup"></a></div>
</div></div>

</div>





<div id="primary_nav">
<ul id="nav">
<li class="">
<a href="http://ocw.mit.edu/">Home</a>
    </li>
	<li class="first active">
<a href="http://ocw.mit.edu/courses/">Courses</a>
    </li>
	<li class="">
<a href="http://ocw.mit.edu/donate">Donate</a>
    </li>
	<li class="">
<a href="http://ocw.mit.edu/about/">About OCW</a>
    </li>
    
   
</ul>
<!-- begin search area, inputs are placed inside div blocks to validate xhtml strict --><form method="get" action="../../common/search/AdvancedSearch.htm">
<div class="searchform">
    <input type="text" onblur="fillSearchBox()" onfocus="clearSearchBox()" maxlength="255" value="Enter search keyword" name="q" class="search" id="terms"><input type="image" alt="Go" src="../../common/images/go_new.gif" name="btnG" class="but"><a href="../../common/search/AdvancedSearch.htm">Advanced Search</a>
</div>
</form>
<!-- end search area -->
<ul id="secondary_nav">
<li class="first"><a href="http://ocw.mit.edu/help">Help</a></li>
    <li><a href="../../common/jsp/feedback.htm">Contact Us</a></li>
</ul>
<!-- end Primary Nav -->
</div>

            
            
            <div id="main">
                
                <div id="local_navigation">
                    




<div class="get_started">
	<ul>
<li><a href="http://ocw.mit.edu/courses">VIEW ALL COURSES</a></li>
	</ul>
</div>


	<div class="get_started">
	    <ul>
<li> 
	        
		            
		            
		            <a href="../../contents/index.htm">Course Home</a>
	        
	        </li>
	        
	    	
	        <li> 
	        
		            
		            
		            <a href="../../contents/syllabus/index.htm">Syllabus</a>
	        
	        </li>
	        
	    	
	        <li> 
	        
		            
		            
		            <a href="../../contents/calendar/index.htm">Calendar</a>
	        
	        </li>
	        
	    	
	        <li> 
	        
		            
		            
		            <a href="../../contents/lecture-notes/index.htm">Lecture Notes</a>
	        
	        </li>
	        
	    	
	        <li> 
	        
		            
		            
		            <a href="../../contents/assignments/index.htm">Assignments</a>
	        
	        </li>
	        
	    	
	        <li> 
	        
		            
		            
		            <a href="../../contents/exams/index.htm">Exams</a>
	        
	        </li>
	        
	    	
	        <li> 
	        
		            <a class="selected" href="../../contents/projects/index.htm">Projects</a>
		            
		            
	        
	        </li>
	        
	    	
	        <li> 
	        
		            
		            
		            <a href="../../contents/readings/index.htm">Readings</a>
	        
	        </li>
	        
	    	
	        
	        
	    </ul>
</div>
	





	





                </div>
                
                               
                <div id="content_body">
        <div class="page_links">
            <div class="breadcrumb">
                <div id="portal-breadcrumbs">

    <a href="http://ocw.mit.edu/">Home</a>
    <span class="breadcrumbSeparator">
        &gt;
        
    </span>
    <span dir="ltr">
        
            <a href="http://ocw.mit.edu/courses">Courses</a>
            <span class="breadcrumbSeparator">
                &gt;
                
            </span>
            
         
    </span>
    <span dir="ltr">
        
            <a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science">Electrical Engineering and Computer Science</a>
            <span class="breadcrumbSeparator">
                &gt;
                
            </span>
            
         
    </span>
    <span dir="ltr">
        
            <a href="../../contents/index.htm">Database Systems</a>
            <span class="breadcrumbSeparator">
                &gt;
                
            </span>
            
         
    </span>
    <span dir="ltr">
        
            
            
            <span>Projects</span>
         
    </span>
</div>

            </div>
        </div>
        <div id="main_content_course">
            <div id="courses_inner">
                <h1>
        <span class="" id="parent-fieldname-title">
            Projects
        </span>
    </h1>
                <div class="clear"></div>
                <div class="mod8">
                    
                    
        <div class="" id="parent-fieldname-text">
            
<p>The final project counts as 30% of the student's final grade in the course. This section contains a description of the final project and suggests project ideas.</p>
<h2 class="subhead">Important Dates</h2>
<p>Key dates for the project, as listed in the <a href="../../contents/calendar/index.htm">calendar</a>, are:</p>
<ul>
<li>
Lecture Session L10: Project Proposals Due
</li>
<li>
Project Session P1: Project Presentations and Final Reports Due
</li>
</ul>
<p>A large portion (30%) of your grade in 6.830 consists of a final project. This project is meant to be a substantial independent research or engineering effort related to material we have studied in class. Your project may involve a comparison of systems we have read about, an application of database techniques to a system you are familiar with, or be a database-related project in your research area.</p>
<p>This document describes what is expected of a final project and proposes some possible project ideas.</p>
<h2 class="subhead">What is Expected</h2>
<p>Good class projects can vary dramatically in complexity, scope, and topic. The only requirement is that they be related to something we have studied in this class and that they contain some element of research - e.g., that you do more than simply engineer a piece of software that someone else has described or architected. To help you determine if your idea is of reasonable scope, we will arrange to meet with each group several times throughout the semester.</p>
<h2 class="subhead">What to Hand In</h2>
<p>There are two written deliverables: a project proposal, due at lecture session L10, and a final report, due at project session P1.</p>
<h3 class="subsubhead">Project Proposal</h3>
<p>The proposal should consist of 1-2 pages describing the problem you plan to solve, outlining how you plan to solve it, and describing what you will "deliver" for the final project. We will arrange short meetings with every group before the project proposal to help you refine your topic and would be happy to provide feedback on a draft of your proposal before it is due.</p>
<h3 class="subsubhead">Final Report</h3>
<p>You should prepare a conference-style report on your project with maximum length of 15 pages (10 pt font or larger, one or two columns, 1" margins, single or double spaced - more is not better.) Your report should introduce and motivate the problem your project addresses, describe related work in the area, discuss the elements of your solution, and present results that measure the behavior, performance, or functionality of your system (with comparisons to other related systems as appropriate.)</p>
<p>Because this report is the primary deliverable upon which you will be graded, <strong>do not treat it as an afterthought</strong>. Plan to leave at least a week to do the writing, and make sure you proofread and edit carefully!</p>
<p>Please submit a paper copy of your report at project session P1. You will also be expected to give a presentation on your project in class that will provide an opportunity for you to present a short demo of your work and show what you have done to other students in the class. Details about the format of the presentation will be posted as the date gets closer.</p>
<h2 class="subhead">Project Ideas</h2>
<p>The following is a list of possible project ideas; you are not required to choose from this list - in fact, we encourage you to try to solve a problem of your own choosing!</p>
<ol>
<li>
Compression in databases. Investigate the impact of keeping data compressed in SimpleDB or another open source database; how much time is saved reading by compressed data off disk? What is the cost of decompression? Is it possible to use compression schemes (e.g., run length encoding) that allow some operations (e.g., selections) to be applied without decompressing? What is the benefit of doing that?<br>
</li>
<li>
Auto-admin tools to recommend indices, etc. Design a tool that recommends a set of indices to build given a particular workload and a set of statistics in a database. Alternatively investigate the question of which materialized views to create in a data-warehousing system, such as C-Store.<br>
</li>
<li>
<a href="http://telegraph.cs.berkeley.edu/tinydb/">TinyDB Projects</a>: TinyDB is a database system that runs on networks of tiny, wireless sensing devices (e.g., <a href="http://www.xbow.com/">Crossbow Motes</a>) and allows users to collect information from the via declarative queries. There are many possible kinds of extensions to TinyDB; some ideas:
<ul>
<li>
Design a simple programming environment so that users and programmers can extend TinyDB with new functions, just like users can write user defined functions in database systems.
</li>
<li>
Implement a set of operators or extend the TinyDB query language with support for some kind of signal processing or time-series analysis algorithm.
</li>
<li>
TinyDB currently floods queries to all nodes in the network, which is not a good idea if queries only apply to a few nodes. The goal of this project would be to add support for scoped queries that go only to a subset of nodes and measure the benefit of your implementation.
</li>
<li>
Make TinyDB work in the face of disconnections in the sensor network topology.
</li>
</ul>
There is a simulator and hardware available for students interested in one of these projects.
</li>
<li>
Data warehousing systems (such as C-Store are often optimized to deal with so-called "star schemas" that consist of one very large "fact" table that joins with a number of smaller "dimension" tables through foreign key relationships. For example, a data warehouse might consist of a fact table that stores information about recent sales, which would join with tables about customers, stores, etc. In this project, you would devise a scheme to efficiently evaluate queries over schemas that are "near" star schemas by transforming them to star schemas and using the C-Store query optimizer.<br>
</li>
<li>
The Selinger Optimizer (see "Access Path Selection in a Relational Database Management System" in the Red Book) is notoriously bad at making query optimization decisions when there are many joins because the statistics it computes over intermediate results are often wrong. Your goal for this project is to devise a scheme for evaluating joins that doesn't require such detailed statistics - for example, by partitioning the query plan into several smaller groups of joins that can be computed independently, and then using statistics collected during the computation of those joins to join the remaining intermediate relations. Of course, this won't be "optimal", but your goal should be to show that your scheme avoids making <strong>very bad</strong> decisions and can in-fact outperform Selinger in some situations.<br>
</li>
<li>
Modern networking hardware often provides support for efficient broadcast and multicast of packets from a sender to multiple receivers. Suppose you had access to such primitives; your goal in this project would be to explore how to use them to make distributed query processing more efficient. We have access to a small cluster of machines that you can use to explore any techniques you develop in the context of SimpleDB.<br>
</li>
<li>
SimpleDB is very simple. There are a number of ways you might extend it to explore some of the research ideas we have studied in this class. For example, you could add support for optimistic concurrency control and compare its performance to the basic concurrency control scheme you will implement in Problem Set 3. There are a number of other possible projects of this type; we would be happy to discuss these in more detail.<br>
</li>
<li>
In the CarTel project, we are building a system for collecting and managing data from automobiles. One of the goals of this project is to use data collected from GPS devices on the cars to make intelligent route-planning decisions (think MapQuest or Google Maps with access to current traffic information.) To build such a smart route planner, we need a way to map GPS points (latitute, longitude) to named roads that correspond to those points. There has been some recent work in the database community on doing this mapping very efficiently; the goal of this project would be to investigate these algorithms in the context of CarTel and explore other possibly more effective techniques.<br>
</li>
<li>
Personal Information Management: Build a utility for collecting and querying structured and unstructured data about a user's data, files, and general computing environment - for example, this tool might manage lists of URLs, automatically extracting keywords about those URLs from the associated web sites and storing them in a database so that users can search for their favorite web pages without remembering URLs. Or build a system that stores URLs and keywords with downloaded files to facilitate file search. Or build a tool that keeps a database of a users preferences files (or registry entries) and allows users to "rollback" inadvertent and / or nasty changes.<br>
</li>
<li>
CiteSeer: The PDOS research group at MIT has access to the data for the CiteSeer system, which is currently not stored in a relational database. An interesting project would be to port the system to a database engine, and extend the functionality with some new and interesting queries enabled by SQL, or to compare the performance before and after the porting.<br>
</li>
<li>
Database Performance in Haystack: Haystack is a "universal information client" useful for storing all sorts of personal data - email, contacts, calendars, etc. It stores data in RDF (an XML-like semi-structured representation) and uses a custom in-memory database system. The Haystack team would like to be able to replace this system with an off-the-shelf database engine, but there are some significant performance issues in doing so. An interesting project would be to analyze the cause of these performance issues, devise a set of recommendations for how to improve database performance, and implement this in Haystack.<br>
</li>
<li>
Exploiting Structured Data in Haystack: One of the challenges of building a database system for unstructured data (e.g., data where there is no fixed schema) is that formulating queries over such data is very hard (because users don't know which fields to query). One interesting question is to try to build a set of tools that encourage users to insert data that has a similar schema as records already in the system. A similar challenge is to devise a programming environment that makes it easy for developers to query data that has no definite schema (but where something about the schema is known.)<br>
</li>
<li>
Integrity Constraints in Streaming Systems: Current stream data processing systems do not provide any way for users to specify constraints on the data that they can handle - for example, a financial analysis application might want to verify that no purchases exceed some available balance. This project would involve defining what such constraints mean, and exploring ways to efficiently check and react to them.
</li>
</ol>
</div>
    
                    





                    
                                       
                </div>
<!-- mod8 ends -->
            </div>
<!-- courses_inner ends -->
            
        </div>
<!-- main_content_course ends -->
      </div>
<!-- content_body END -->
                                
            </div>
<!-- main end -->
            <div id="footer">
                
<div id="portletwrapper-6f63772e626f74746f6d706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d666f6f746572" class="portletWrapper kssattr-portlethash-6f63772e626f74746f6d706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d666f6f746572">
<div class="portletStaticText portlet-static-site-footer"><div class="footer">
<div class="footer_logo">
<a href="http://web.mit.edu"> 
<img width="65" height="35" align="top" title="MIT Logo" src="../../common/images/trans.gif" alt="MIT Logo"></a>  
<a href="../../common/terms/index.htm"> 
<img width="100" height="13" align="top" title="Copyright MIT" src="../../common/images/trans.gif" alt="Copyright MIT"></a>
</div>
<div class="footer_links">
<ul>
<li class="first">
<a href="http://ocw.mit.edu/about/rss/">
<img width="32" height="15" align="absbottom" src="../../common/images/footer_rss_new.gif" alt="RSS Feeds"></a> 
<a href="http://ocw.mit.edu/about/rss/">RSS Feeds</a>
</li>
    <li><a href="../../common/terms/index.htm">Privacy and Terms of Use</a></li>
    <li><a href="http://ocw.mit.edu/help/site-map/">Site Map</a></li>
    <li><a href="http://ocw.mit.edu/help/faq-cite-ocw-content/">Cite OCW Content</a></li>
</ul>
<p>Your use of the MIT OpenCourseWare site and course materials is subject to our Creative Commons License and other terms  of use.</p>
<!-- end footer links -->
</div>
<div class="license">
<a class="first" href="http://creativecommons.org/licenses/by-nc-sa/3.0/us/" rel="license" target="_blank"><img width="80" height="15" src="../../common/images/cc_logo_new.gif" alt="Creative Commons - some rights reserved"></a><br><a class="first" href="http://www.ocwconsortium.org/" target="_blank">
<img width="80" height="44" src="../../common/images/ocw-logo_new.gif" alt="OCW Consortium"></a>
</div>
</div></div>

</div>





                
            </div>
<!-- footer end -->
        </div>
<!-- container end -->    
      </body>
</html>
